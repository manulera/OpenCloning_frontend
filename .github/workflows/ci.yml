name: CI / CD
on: [push, pull_request]

jobs:
  get-backend-sha:
    runs-on: ubuntu-latest
    outputs:
      backend_sha: ${{ steps.get-backend-sha.outputs.backend_sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Get backend sha
        id: get-sha
        run: |
          echo "backend_sha=$(git rev-parse @:ShareYourCloning_backend)" >> $GITHUB_OUTPUT

  check-cache:
    runs-on: ubuntu-latest
    needs: get-backend-sha
    outputs:
      cache-hit: ${{ steps.cache-check.outputs.cache-hit }}
    steps:

      # This step both checks AND saves the cache
      # If there's a cache hit: it restores it
      # If there's no cache hit: it will save any files matching the path at the end of the job
      - name: Check cached venv
        id: cache-check
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.local/lib/python3.11/site-packages
          key: venv-${{ runner.os }}-${{ needs.get-backend-sha.outputs.backend_sha }}

  install-python-dependencies:
    needs: [check-cache, get-backend-sha]
    if: needs.check-cache.outputs.cache-hit != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Install Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: 3.11

      - name: Install python dependencies
        run: |
          pip install git+https://github.com/manulera/ShareYourCloning_backend.git@${{ needs.get-backend-sha.outputs.backend_sha }}

      # The same cache action is used here to save the newly created .venv
      # Since we know there was no cache hit (due to the if condition),
      # this step will save the .venv directory at the end of the job
      - name: Save venv to cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.local/lib/python3.11/site-packages
          key: venv-${{ runner.os }}-${{ needs.get-backend-sha.outputs.backend_sha }}


  # cypress-setup:
  #   name: Run Cypress tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Checkout submodules
  #       run: git submodule update --init --recursive

  #     - name: Install Python
  #       uses: actions/setup-python@v5.4.0
  #       with:
  #         python-version: 3.11

  #     - name: Install poetry
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install poetry

  #     - name: Install python dependencies
  #       run: |
  #         cd ShareYourCloning_backend
  #         poetry build
  #         pip install dist/shareyourcloning-*.whl


  cypress-tests:
    needs: [install-python-dependencies, get-backend-sha]
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: install mafft
        run: |
          sudo apt-get update
          sudo apt-get install -y mafft

      - name: Download MARS executable
        run: |
          wget https://github.com/manulera/MARS/releases/download/v0.2/mars-Linux
          chmod +x mars-Linux
          sudo mv mars-Linux /usr/local/bin/mars

      - name: Install Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: 3.11.

      - name: Restore cached venv
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.local/lib/python3.11/site-packages
          key: venv-${{ runner.os }}-${{ needs.get-backend-sha.outputs.backend_sha }}


      - name: run python dev server in background
        env:
          NCBI_API_KEY: ${{ secrets.NCBI_API_KEY }}
        run: |
          uvicorn shareyourcloning.main:app &

      - name: check if the server is running
        run: |
          for i in {1..3}; do
            if curl -s http://127.0.0.1:8000 > /dev/null; then
              echo "Server is up!"
              exit 0
            fi
            echo "Waiting for server... ($i/3)"
            sleep 2
          done
          echo "Server failed to start"
          exit 1

      - name: Kill workflow
        if: always()
        run: |
          exit 1

      - name: Install javascript dependencies
        run: corepack enable && yarn install  

      - name: Cypress run E2E tests
        uses: cypress-io/github-action@v6
        env:
          VITE_COVERAGE: "true"
          VITE_LOG_LEVEL: "warn"
        with:
          start: yarn start
          install: false

      - name: Rename coverage file
        run: |
          mv coverage/coverage-final.json coverage-e2e.json

      - name: Cypress run component tests
        uses: cypress-io/github-action@v6
        env:
          VITE_COVERAGE: "true"
          VITE_LOG_LEVEL: "warn"
        with:
          component: true
          install: false  # Skip installation since it was done in previous step

      - name: Merge coverage reports
        run: |
          npx nyc report --reporter json --report-dir coverage

      - name: Upload coverage
        uses: actions/upload-artifact@v4.6.0
        with:
          name: cypress-coverage
          path: coverage

      - name: Upload screenshots
        uses: actions/upload-artifact@v4.6.0
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage/coverage-final.json

  # Update docker image when committing to master branch if tests pass
  push_to_registry:
    name: Push Docker image to Docker Hub
    # Only run if tests pass
    needs: cypress-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: manulera/shareyourcloningfrontend

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          push: true
          tags: manulera/shareyourcloningfrontend:latest
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          push: true
          tags: manulera/shareyourcloningfrontend:latest-syc-base
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_URL=/shareyourcloning/
            COMMIT_SHA=${{ github.sha }}
